// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/decentraland/content-service/storage (interfaces: Storage)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	io "io"
	reflect "reflect"
)

// MockStorage is a mock of Storage interface
type MockStorage struct {
	ctrl     *gomock.Controller
	recorder *MockStorageMockRecorder
}

// MockStorageMockRecorder is the mock recorder for MockStorage
type MockStorageMockRecorder struct {
	mock *MockStorage
}

// NewMockStorage creates a new mock instance
func NewMockStorage(ctrl *gomock.Controller) *MockStorage {
	mock := &MockStorage{ctrl: ctrl}
	mock.recorder = &MockStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockStorage) EXPECT() *MockStorageMockRecorder {
	return m.recorder
}

// DownloadFile mocks base method
func (m *MockStorage) DownloadFile(arg0, arg1 string) error {
	ret := m.ctrl.Call(m, "DownloadFile", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DownloadFile indicates an expected call of DownloadFile
func (mr *MockStorageMockRecorder) DownloadFile(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DownloadFile", reflect.TypeOf((*MockStorage)(nil).DownloadFile), arg0, arg1)
}

// FileSize mocks base method
func (m *MockStorage) FileSize(arg0 string) (int64, error) {
	ret := m.ctrl.Call(m, "FileSize", arg0)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FileSize indicates an expected call of FileSize
func (mr *MockStorageMockRecorder) FileSize(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FileSize", reflect.TypeOf((*MockStorage)(nil).FileSize), arg0)
}

// GetFile mocks base method
func (m *MockStorage) GetFile(arg0 string) string {
	ret := m.ctrl.Call(m, "GetFile", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetFile indicates an expected call of GetFile
func (mr *MockStorageMockRecorder) GetFile(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFile", reflect.TypeOf((*MockStorage)(nil).GetFile), arg0)
}

// SaveFile mocks base method
func (m *MockStorage) SaveFile(arg0 string, arg1 io.Reader) (string, error) {
	ret := m.ctrl.Call(m, "SaveFile", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SaveFile indicates an expected call of SaveFile
func (mr *MockStorageMockRecorder) SaveFile(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveFile", reflect.TypeOf((*MockStorage)(nil).SaveFile), arg0, arg1)
}
